// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/hightouch-go-sdk/pkg/models/shared"
	"net/http"
)

type ListModelSecurity struct {
	BearerAuth string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

func (o *ListModelSecurity) GetBearerAuth() string {
	if o == nil {
		return ""
	}
	return o.BearerAuth
}

// ListModelOrderBy - specify the order
type ListModelOrderBy string

const (
	ListModelOrderByID        ListModelOrderBy = "id"
	ListModelOrderByName      ListModelOrderBy = "name"
	ListModelOrderBySlug      ListModelOrderBy = "slug"
	ListModelOrderByCreatedAt ListModelOrderBy = "createdAt"
	ListModelOrderByUpdatedAt ListModelOrderBy = "updatedAt"
)

func (e ListModelOrderBy) ToPointer() *ListModelOrderBy {
	return &e
}

func (e *ListModelOrderBy) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "id":
		fallthrough
	case "name":
		fallthrough
	case "slug":
		fallthrough
	case "createdAt":
		fallthrough
	case "updatedAt":
		*e = ListModelOrderBy(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListModelOrderBy: %v", v)
	}
}

type ListModelRequest struct {
	// limit the number of objects returned (default is 100)
	Limit *float64 `queryParam:"style=form,explode=true,name=limit"`
	// filter based on name
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// set the offset on results (for pagination)
	Offset *float64 `queryParam:"style=form,explode=true,name=offset"`
	// specify the order
	OrderBy *ListModelOrderBy `queryParam:"style=form,explode=true,name=orderBy"`
	// filter based on slug
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
}

func (o *ListModelRequest) GetLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *ListModelRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ListModelRequest) GetOffset() *float64 {
	if o == nil {
		return nil
	}
	return o.Offset
}

func (o *ListModelRequest) GetOrderBy() *ListModelOrderBy {
	if o == nil {
		return nil
	}
	return o.OrderBy
}

func (o *ListModelRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

// ListModel200ApplicationJSON - Ok
type ListModel200ApplicationJSON struct {
	Data []shared.Model `json:"data"`
}

func (o *ListModel200ApplicationJSON) GetData() []shared.Model {
	if o == nil {
		return []shared.Model{}
	}
	return o.Data
}

type ListModelResponse struct {
	ContentType string
	// Ok
	ListModel200ApplicationJSONObject *ListModel200ApplicationJSON
	StatusCode                        int
	RawResponse                       *http.Response
	// Validation Failed
	ValidateErrorJSON *shared.ValidateErrorJSON
}

func (o *ListModelResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *ListModelResponse) GetListModel200ApplicationJSONObject() *ListModel200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.ListModel200ApplicationJSONObject
}

func (o *ListModelResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *ListModelResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *ListModelResponse) GetValidateErrorJSON() *shared.ValidateErrorJSON {
	if o == nil {
		return nil
	}
	return o.ValidateErrorJSON
}
