// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"errors"
	"github.com/speakeasy-sdks/hightouch-go-sdk/pkg/models/shared"
	"github.com/speakeasy-sdks/hightouch-go-sdk/pkg/utils"
	"net/http"
)

type UpdateModelRequest struct {
	ModelUpdate shared.ModelUpdate `request:"mediaType=application/json"`
	// The model's ID
	ModelID float64 `pathParam:"style=simple,explode=false,name=modelId"`
}

func (o *UpdateModelRequest) GetModelUpdate() shared.ModelUpdate {
	if o == nil {
		return shared.ModelUpdate{}
	}
	return o.ModelUpdate
}

func (o *UpdateModelRequest) GetModelID() float64 {
	if o == nil {
		return 0.0
	}
	return o.ModelID
}

type UpdateModel200ApplicationJSONType string

const (
	UpdateModel200ApplicationJSONTypeModel               UpdateModel200ApplicationJSONType = "Model"
	UpdateModel200ApplicationJSONTypeValidateErrorJSON   UpdateModel200ApplicationJSONType = "ValidateErrorJSON"
	UpdateModel200ApplicationJSONTypeInternalServerError UpdateModel200ApplicationJSONType = "InternalServerError"
)

type UpdateModel200ApplicationJSON struct {
	Model               *shared.Model
	ValidateErrorJSON   *shared.ValidateErrorJSON
	InternalServerError *shared.InternalServerError

	Type UpdateModel200ApplicationJSONType
}

func CreateUpdateModel200ApplicationJSONModel(model shared.Model) UpdateModel200ApplicationJSON {
	typ := UpdateModel200ApplicationJSONTypeModel

	return UpdateModel200ApplicationJSON{
		Model: &model,
		Type:  typ,
	}
}

func CreateUpdateModel200ApplicationJSONValidateErrorJSON(validateErrorJSON shared.ValidateErrorJSON) UpdateModel200ApplicationJSON {
	typ := UpdateModel200ApplicationJSONTypeValidateErrorJSON

	return UpdateModel200ApplicationJSON{
		ValidateErrorJSON: &validateErrorJSON,
		Type:              typ,
	}
}

func CreateUpdateModel200ApplicationJSONInternalServerError(internalServerError shared.InternalServerError) UpdateModel200ApplicationJSON {
	typ := UpdateModel200ApplicationJSONTypeInternalServerError

	return UpdateModel200ApplicationJSON{
		InternalServerError: &internalServerError,
		Type:                typ,
	}
}

func (u *UpdateModel200ApplicationJSON) UnmarshalJSON(data []byte) error {

	validateErrorJSON := shared.ValidateErrorJSON{}
	if err := utils.UnmarshalJSON(data, &validateErrorJSON, "", true, true); err == nil {
		u.ValidateErrorJSON = &validateErrorJSON
		u.Type = UpdateModel200ApplicationJSONTypeValidateErrorJSON
		return nil
	}

	model := shared.Model{}
	if err := utils.UnmarshalJSON(data, &model, "", true, true); err == nil {
		u.Model = &model
		u.Type = UpdateModel200ApplicationJSONTypeModel
		return nil
	}

	internalServerError := shared.InternalServerError("")
	if err := utils.UnmarshalJSON(data, &internalServerError, "", true, true); err == nil {
		u.InternalServerError = &internalServerError
		u.Type = UpdateModel200ApplicationJSONTypeInternalServerError
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u UpdateModel200ApplicationJSON) MarshalJSON() ([]byte, error) {
	if u.Model != nil {
		return utils.MarshalJSON(u.Model, "", true)
	}

	if u.ValidateErrorJSON != nil {
		return utils.MarshalJSON(u.ValidateErrorJSON, "", true)
	}

	if u.InternalServerError != nil {
		return utils.MarshalJSON(u.InternalServerError, "", true)
	}

	return nil, errors.New("could not marshal union type: all fields are null")
}

type UpdateModelResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// Something went wrong
	InternalServerError *shared.InternalServerError
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Ok
	UpdateModel200ApplicationJSONOneOf *UpdateModel200ApplicationJSON
	// Validation Failed
	ValidateErrorJSON *shared.ValidateErrorJSON
}

func (o *UpdateModelResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateModelResponse) GetInternalServerError() *shared.InternalServerError {
	if o == nil {
		return nil
	}
	return o.InternalServerError
}

func (o *UpdateModelResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateModelResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateModelResponse) GetUpdateModel200ApplicationJSONOneOf() *UpdateModel200ApplicationJSON {
	if o == nil {
		return nil
	}
	return o.UpdateModel200ApplicationJSONOneOf
}

func (o *UpdateModelResponse) GetValidateErrorJSON() *shared.ValidateErrorJSON {
	if o == nil {
		return nil
	}
	return o.ValidateErrorJSON
}
