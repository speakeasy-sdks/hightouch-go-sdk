// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IntervalUnit string

const (
	IntervalUnitMinute IntervalUnit = "minute"
	IntervalUnitHour   IntervalUnit = "hour"
	IntervalUnitDay    IntervalUnit = "day"
	IntervalUnitWeek   IntervalUnit = "week"
)

func (e IntervalUnit) ToPointer() *IntervalUnit {
	return &e
}

func (e *IntervalUnit) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "minute":
		fallthrough
	case "hour":
		fallthrough
	case "day":
		fallthrough
	case "week":
		*e = IntervalUnit(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IntervalUnit: %v", v)
	}
}
