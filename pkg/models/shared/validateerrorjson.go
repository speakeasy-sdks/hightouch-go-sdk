// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy-sdks/hightouch-go-sdk/pkg/utils"
)

type ValidateErrorJSONMessage string

const (
	ValidateErrorJSONMessageValidationFailed ValidateErrorJSONMessage = "Validation failed"
)

func (e ValidateErrorJSONMessage) ToPointer() *ValidateErrorJSONMessage {
	return &e
}

func (e *ValidateErrorJSONMessage) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Validation failed":
		*e = ValidateErrorJSONMessage(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidateErrorJSONMessage: %v", v)
	}
}

type ValidateErrorJSON struct {
	AdditionalProperties map[string]interface{}   `additionalProperties:"true" json:"-"`
	Details              map[string]interface{}   `json:"details"`
	Message              ValidateErrorJSONMessage `json:"message"`
}

func (v ValidateErrorJSON) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *ValidateErrorJSON) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ValidateErrorJSON) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *ValidateErrorJSON) GetDetails() map[string]interface{} {
	if o == nil {
		return map[string]interface{}{}
	}
	return o.Details
}

func (o *ValidateErrorJSON) GetMessage() ValidateErrorJSONMessage {
	if o == nil {
		return ValidateErrorJSONMessage("")
	}
	return o.Message
}
