// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ValidateErrorJSONMessage string

const (
	ValidateErrorJSONMessageValidationFailed ValidateErrorJSONMessage = "Validation failed"
)

func (e ValidateErrorJSONMessage) ToPointer() *ValidateErrorJSONMessage {
	return &e
}

func (e *ValidateErrorJSONMessage) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Validation failed":
		*e = ValidateErrorJSONMessage(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidateErrorJSONMessage: %v", v)
	}
}

// ValidateErrorJSON - Validation Failed
type ValidateErrorJSON struct {
	Details map[string]interface{}   `json:"details"`
	Message ValidateErrorJSONMessage `json:"message"`
}
