// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type SyncSequenceStatusOutputSyncRuns struct {
	FinishedAt string `json:"finishedAt"`
	// The status of sync runs
	Status    SyncRunStatus `json:"status"`
	SyncID    string        `json:"syncId"`
	SyncRunID string        `json:"syncRunId"`
}

func (o *SyncSequenceStatusOutputSyncRuns) GetFinishedAt() string {
	if o == nil {
		return ""
	}
	return o.FinishedAt
}

func (o *SyncSequenceStatusOutputSyncRuns) GetStatus() SyncRunStatus {
	if o == nil {
		return SyncRunStatus("")
	}
	return o.Status
}

func (o *SyncSequenceStatusOutputSyncRuns) GetSyncID() string {
	if o == nil {
		return ""
	}
	return o.SyncID
}

func (o *SyncSequenceStatusOutputSyncRuns) GetSyncRunID() string {
	if o == nil {
		return ""
	}
	return o.SyncRunID
}

// SyncSequenceStatusOutput - The status of a given sync sequence run at both a high level and the individual
// sync-run level.
type SyncSequenceStatusOutput struct {
	ID       string                             `json:"id"`
	Status   SyncSequenceRequestStatus          `json:"status"`
	SyncRuns []SyncSequenceStatusOutputSyncRuns `json:"syncRuns"`
}

func (o *SyncSequenceStatusOutput) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *SyncSequenceStatusOutput) GetStatus() SyncSequenceRequestStatus {
	if o == nil {
		return SyncSequenceRequestStatus("")
	}
	return o.Status
}

func (o *SyncSequenceStatusOutput) GetSyncRuns() []SyncSequenceStatusOutputSyncRuns {
	if o == nil {
		return []SyncSequenceStatusOutputSyncRuns{}
	}
	return o.SyncRuns
}
