// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/hightouch-go-sdk/pkg/utils"
)

type VisualCronScheduleExpressions struct {
	// Construct a type with a set of properties K of type T
	Days RecordDayBooleanOrUndefined `json:"days"`
	Time string                      `json:"time"`
}

func (o *VisualCronScheduleExpressions) GetDays() RecordDayBooleanOrUndefined {
	if o == nil {
		return RecordDayBooleanOrUndefined{}
	}
	return o.Days
}

func (o *VisualCronScheduleExpressions) GetTime() string {
	if o == nil {
		return ""
	}
	return o.Time
}

type VisualCronSchedule struct {
	AdditionalProperties map[string]interface{}          `additionalProperties:"true" json:"-"`
	Expressions          []VisualCronScheduleExpressions `json:"expressions"`
}

func (v VisualCronSchedule) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(v, "", false)
}

func (v *VisualCronSchedule) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &v, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *VisualCronSchedule) GetAdditionalProperties() map[string]interface{} {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}

func (o *VisualCronSchedule) GetExpressions() []VisualCronScheduleExpressions {
	if o == nil {
		return []VisualCronScheduleExpressions{}
	}
	return o.Expressions
}
