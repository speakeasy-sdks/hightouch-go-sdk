// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy-sdks/hightouch-go-sdk/pkg/utils"
	"time"
)

// Source - The database or warehouse where your data is stored. The starting point for
// a Hightouch data pipeline.
type Source struct {
	// The source's configuration. This specifies general metadata about sources, like connection details
	// Hightouch will use this configuration to connect to underlying source.
	//
	// The schema depends on the source type.
	//
	// Consumers should NOT make assumptions on the contents of the
	// configuration. It may change as Hightouch updates its internal code.
	Configuration map[string]interface{} `json:"configuration"`
	// The timestamp when the source was created
	CreatedAt time.Time `json:"createdAt"`
	// The source's id
	ID string `json:"id"`
	// The source's name
	Name string `json:"name"`
	// The source's slug
	Slug string `json:"slug"`
	// The source's type (e.g. snowflake or postgres).
	Type string `json:"type"`
	// The timestamp when the source was last updated
	UpdatedAt time.Time `json:"updatedAt"`
	// The id of the workspace that the source belongs to
	WorkspaceID string `json:"workspaceId"`
}

func (s Source) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *Source) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *Source) GetConfiguration() map[string]interface{} {
	if o == nil {
		return map[string]interface{}{}
	}
	return o.Configuration
}

func (o *Source) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *Source) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Source) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Source) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *Source) GetType() string {
	if o == nil {
		return ""
	}
	return o.Type
}

func (o *Source) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *Source) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}
